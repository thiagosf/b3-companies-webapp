{"version":3,"sources":["store/reducers/company.js","store/reducers/index.js","store/index.js","components/organisms/Companies.js","components/organisms/Candle.js","components/organisms/FilterCandles.js","utils/api.js","utils/number.js","components/pages/Home.js","routes/index.js","store/actions/company.js","index.js"],"names":["initialState","list","sending","activities","combineReducers","company","state","action","nextState","type","identifier","data","length","Set","map","item","activity","filter","sort","a","b","store","createStore","rootReducer","compose","applyMiddleware","thunk","Companies","this","props","searchLabel","entriesLabel","paginationLabel","infoLabel","responsive","striped","small","Component","Candle","_getClasses","classes","push","join","_getLabel","_toggleDirection","setState","onChange","label","className","onClick","FilterCandles","candles","_onChange","index","_index","_add","concat","_pop","pop","Button","size","variant","key","api","getURL","buildURL","path","post","token","request","put","get","params","delete","buildHeaders","headers","Object","assign","method","instance","axios","create","baseURL","config","url","then","response","catch","error","formatPercentage","value","signal","variation","toFixed","Home","filters","evenEmpty","justThreeFour","showCharts","_getData","rows","forEach","b3link","target","rel","href","code","fundamentuslink","tradingview","updated","dayVariation","pL","p_l","pVp","p_vp","price","open","number","last_candle","close","Date","updated_at","toLocaleString","links","chart","screenshot","fullScreenshot","fullScreenshotWeekly","url_weekly","fullScreenshotMonthly","url_monthly","screenshotDate","date","src","alt","title","name","day_variation","endsWith","showEntries","columns","field","newRow","_getPositiveNegativeClass","_toggleFilter","newFilters","_onChangeCandles","_loadData","loadCompanies","_onChangeActivity","event","Container","fluid","FormCheck","Input","checked","routes","component","connect","dispatch","result","success","render","basename","process","route","exact","document","getElementById"],"mappings":"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","file":"static/js/main.e64ece91.chunk.js","sourcesContent":["const initialState = {\n  list: [],\n  sending: false,\n  activities: [],\n}\n\nconst identifier = 'company'\n\nexport default (state = initialState, action) => {\n  let nextState = { ...state }\n\n  switch (action.type) {\n    case 'BEFORE_SEND':\n      if (action.identifier === identifier) {\n        nextState.sending = true\n      }\n      break\n\n    case 'AFTER_RESPONSE':\n      if (action.identifier === identifier) {\n        nextState.sending = false\n      }\n      break\n\n    case 'SET_COMPANIES':\n      nextState.list = action.data\n      if (nextState.activities.length === 0) {\n        nextState.activities = [...new Set(\n          action.data\n            .map(item => item.activity)\n            .filter(item => item)\n        )].sort((a, b) => a > b)\n      }\n      break\n\n    default:\n      nextState = state\n      break\n  }\n\n  return nextState\n}\n","import { combineReducers } from 'redux'\nimport company from './company'\n\nexport default combineReducers({\n  company\n})\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk))\n)\n\nexport default store\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { MDBDataTable } from 'mdbreact'\n\nclass Companies extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired\n  };\n\n  render () {\n    const { data } = this.props\n    return (\n      <MDBDataTable\n        searchLabel='Buscar'\n        entriesLabel='Limitar'\n        paginationLabel={['Anterior', 'Próxima']}\n        infoLabel={['Exibindo', 'até', 'de', 'registros']}\n        responsive\n        striped\n        small\n        data={data}\n      />\n    )\n  };\n}\n\nexport default Companies\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Candle extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired\n  };\n\n  state = {\n    type: 'positive'\n  }\n\n  render () {\n    const classes = this._getClasses()\n    const label = this._getLabel()\n    return (\n      <div\n        className={classes}\n        onClick={this._toggleDirection}\n      >{label}</div>\n    )\n  };\n\n  _getClasses = () => {\n    let classes = ['candle']\n    const { type } = this.state\n    if (type === 'positive') {\n      classes.push('candle--positive')\n    } else {\n      classes.push('candle--negative')\n    }\n    return classes.join(' ')\n  }\n\n  _getLabel = () => {\n    const { type } = this.state\n    return type === 'positive'\n      ? 'P'\n      : 'N'\n  }\n\n  _toggleDirection = () => {\n    const type = this.state.type === 'positive'\n      ? 'negative'\n      : 'positive'\n    this.setState({ type }, () => {\n      this.props.onChange(type)\n    })\n  }\n}\n\nexport default Candle\n","import React, { Component } from 'react'\nimport Candle from './Candle'\nimport {\n  Button\n} from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\nclass FilterCandles extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired\n  };\n\n  state = {\n    candles: []\n  }\n\n  render () {\n    return (\n      <div className=\"filter-candles\">\n        <div className=\"filter-candles--label\">\n          <strong>Filtrar candles</strong>\n        </div>\n        <div className=\"filter-candles--label\">\n          As velas serão filtradas da data mais recente para mais antiga, ou seja, a primeira vela é referente a ontem, depois a de ante-ontem, e assim por diante. Clique na vela para alternar entre <code>positiva</code> e <code>negativa</code>.\n        </div>\n        <div className=\"filter-candles--actions\">\n          <Button size='sm' variant='success' onClick={this._add}>+</Button>\n          <Button size='sm' variant='warning' onClick={this._pop}>-</Button>\n        </div>\n        <div className=\"filter-candles--list\">\n          {this.state.candles.map((item, index) => {\n            return (\n              <Candle\n                key={index}\n                onChange={(type) => this._onChange(index, type)}\n              />\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n\n  _onChange = (index, type) => {\n    const candles = this.state.candles.map((item, _index) => {\n      if (+index === +_index) {\n        item = type\n      }\n      return item\n    })\n    this.setState({ candles })\n    this.props.onChange(candles)\n  }\n\n  _add = () => {\n    let candles = [].concat(this.state.candles)\n    candles.push('positive')\n    this.setState({ candles })\n    this.props.onChange(candles)\n  }\n\n  _pop = () => {\n    let candles = [].concat(this.state.candles)\n    candles.pop()\n    this.setState({ candles })\n    this.props.onChange(candles)\n  }\n}\n\nexport default FilterCandles\n","import axios from 'axios'\n\n/**\n * Utilidades para API\n */\nconst api = {\n  /**\n   * Retorna url da api\n   * @returns {string}\n   */\n  getURL () {\n    let url\n    if (\n      process.env.NODE_ENV === 'dev' ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NODE_ENV === 'test'\n    ) {\n      // url = 'http://localhost:3000'\n      url = 'https://api.b3-companies.thiagosf.net'\n    } else {\n      url = 'https://api.b3-companies.thiagosf.net'\n    }\n    return url\n  },\n\n  /**\n   * Monta url\n   * @param {string} path\n   * @returns {string}\n   */\n  buildURL (path) {\n    return this.getURL() + path\n  },\n\n  /**\n   * Post\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  post (path, data = {}, token = null) {\n    return this.request('post', path, data, token)\n  },\n\n  /**\n   * Put\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  put (path, data = {}, token = null) {\n    return this.request('put', path, data, token)\n  },\n\n  /**\n   * Get\n   * @param {string} path\n   * @param {object} [params={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  get (path, params = {}, token = null) {\n    return this.request('get', path, params, token)\n  },\n\n  /**\n   * Post\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  delete (path, data = {}, token = null) {\n    return this.request('delete', path, data, token)\n  },\n\n  /**\n   * Retorna headers\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {object}\n   */\n  buildHeaders (data = {}, token = null) {\n    let headers = {}\n    if (data.headers) {\n      headers = Object.assign({}, data.headers)\n    }\n    if (token) {\n      headers['Authorization'] = `Token ${token}`\n    }\n    return headers\n  },\n\n  /**\n   * Faz request\n   * @param {string} method\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {object} [token=null]\n   * @returns {Promise}\n   */\n  request (method, path, data = {}, token = null) {\n    const headers = this.buildHeaders(data, token)\n    const instance = axios.create({\n      baseURL: this.getURL(),\n      headers\n    })\n    let config = {\n      url: path,\n      method,\n    }\n    if (method === 'get') {\n      config.params = data || {}\n    } else {\n      config.data = data || {}\n    }\n    return instance.request(config)\n      .then(response => response.data)\n      .catch(error => {\n        if (error.response && error.response.data) {\n          return error.response.data\n        }\n        throw error\n      })\n  }\n}\n\nexport default api\n","export default {\n  formatPercentage (value, signal = true) {\n    let variation = +((+value).toFixed(2))\n    if (signal) {\n      variation = `${variation}%`\n    }\n    return variation\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Container,\n  FormCheck\n} from 'react-bootstrap'\nimport { Companies, FilterCandles } from '../organisms'\nimport { loadCompanies } from '../../store/actions/company'\nimport { number, api } from '../../utils'\n\nclass Home extends Component {\n  state = {\n    filters: {\n      evenEmpty: false,\n      justThreeFour: true,\n      candles: [],\n      activity: '',\n      showCharts: true\n    }\n  }\n\n  componentDidMount () {\n    this._loadData()\n  }\n\n  render () {\n    const { filters } = this.state\n    const { sending, activities } = this.props.company\n    const data = this._getData()\n    return (\n      <Container fluid>\n        <div className=\"home\">\n          <h1 className=\"home__title\">Empresas B3</h1>\n          <div className=\"home-filters\">\n            <div className=\"row\">\n              <div className=\"col-4\">\n                <label className=\"form-check\">\n                  <FormCheck.Input\n                    checked={filters.evenEmpty}\n                    onChange={() => this._toggleFilter('evenEmpty')}\n                  />\n                  <span>Exibir ações com preço em branco</span>\n                </label>\n              </div>\n              <div className=\"col-4\">\n                <label className=\"form-check\">\n                  <FormCheck.Input\n                    checked={filters.justThreeFour}\n                    onChange={() => this._toggleFilter('justThreeFour')}\n                  />\n                  <span>Apenas com final 3 e 4</span>\n                </label>\n              </div>\n              <div className=\"col-4\">\n                <label className=\"form-check\">\n                  <FormCheck.Input\n                    checked={filters.showCharts}\n                    onChange={() => this._toggleFilter('showCharts')}\n                  />\n                  <span>Exibir gráficos</span>\n                </label>\n              </div>\n              <div className=\"col-sm-12 col-md-8\">\n                <FilterCandles\n                  onChange={this._onChangeCandles}\n                />\n              </div>\n              <div className=\"col-sm-12 col-md-4\">\n                <label>Filtre pela atividade</label>\n                <select\n                  className=\"form-control\"\n                  onChange={this._onChangeActivity}\n                >\n                  <option value=''>Todas</option>\n                  {activities.map((value, index) => {\n                    return (\n                      <option key={index}>{value}</option>\n                    )\n                  })}\n                </select>\n              </div>\n            </div>\n          </div>\n          {sending &&\n            <p>Carregando...</p>\n          }\n          {!sending &&\n            <Companies\n              data={data}\n            />\n          }\n        </div>\n      </Container>\n    )\n  }\n\n  _getData = () => {\n    const {\n      evenEmpty,\n      justThreeFour,\n      activity,\n      showCharts\n    } = this.state.filters\n    const { list } = this.props.company\n    let rows = []\n    list.forEach(item => {\n      const b3link = (\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href={`http://bvmf.bmfbovespa.com.br/cias-listadas/empresas-listadas/BuscaEmpresaListada.aspx?Nome=${item.code}&idioma=pt-br`}\n        >\n          b3\n        </a>\n      )\n      const fundamentuslink = (\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href={`https://www.fundamentus.com.br/detalhes.php?papel=${item.code}`}\n        >\n          fundamentus\n        </a>\n      )\n      const tradingview = (\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href={`https://br.tradingview.com/chart/?symbol=BMFBOVESPA:${item.code}`}\n        >\n          tradingView\n        </a>\n      )\n      let updated = null\n      let dayVariation = 0\n      let variation = 0\n      let pL = +item.p_l\n      let pVp = +item.p_vp\n      let price = +item.price\n      let open = +item.open\n      if (item.price) {\n        dayVariation = ((price / open) - 1) * 100\n        dayVariation = number.formatPercentage(dayVariation, false)\n        if (item.last_candle) {\n          variation = ((price / +item.last_candle.close) - 1) * 100\n          variation = number.formatPercentage(variation, false)\n          updated = new Date(item.updated_at)\n          updated = updated.toLocaleString()\n        }\n      }\n      const links = (\n        <div className=\"company-links\">\n          {b3link}\n          <br />\n          {fundamentuslink}\n          <br />\n          {tradingview}\n        </div>\n      )\n      let chart = null\n      if (\n        item.screenshot &&\n        item.screenshot.url &&\n        showCharts\n      ) {\n        const fullScreenshot = `${api.getURL()}${item.screenshot.url}`\n        const fullScreenshotWeekly = `${api.getURL()}${item.screenshot.url_weekly}`\n        const fullScreenshotMonthly = `${api.getURL()}${item.screenshot.url_monthly}`\n        let screenshotDate = new Date(+item.screenshot.date)\n        screenshotDate = screenshotDate.toLocaleString()\n        chart = (\n          <div className=\"company-chart\">\n            <div className=\"company-chart__item\">\n              <p className=\"company-chart__item__title\">Diário</p>\n              <img\n                className=\"company-chart__item__image\"\n                src={fullScreenshot}\n                alt={`Data do screenshot: ${screenshotDate}`}\n                title={`Data do screenshot: ${screenshotDate}`}\n              />\n            </div>\n            <div className=\"company-chart__item\">\n              <p className=\"company-chart__item__title\">Semanal</p>\n              <img\n                className=\"company-chart__item__image\"\n                src={fullScreenshotWeekly}\n                alt={`Data do screenshot: ${screenshotDate}`}\n                title={`Data do screenshot: ${screenshotDate}`}\n              />\n            </div>\n            <div className=\"company-chart__item\">\n              <p className=\"company-chart__item__title\">Mensal</p>\n              <img\n                className=\"company-chart__item__image\"\n                src={fullScreenshotMonthly}\n                alt={`Data do screenshot: ${screenshotDate}`}\n                title={`Data do screenshot: ${screenshotDate}`}\n              />\n            </div>\n          </div>\n        )\n      }\n      rows.push({\n        company: item.name,\n        code: item.code,\n        price,\n        day_variation: dayVariation,\n        variation,\n        p_l: pL,\n        p_vp: pVp,\n        updated,\n        chart,\n        links,\n        activity: item.activity\n      })\n    })\n\n    if (!evenEmpty) {\n      rows = rows.filter(item => {\n        return item.price > 0\n      })\n    }\n\n    if (justThreeFour) {\n      rows = rows.filter(item => {\n        return (\n          item.code.endsWith('3') ||\n          item.code.endsWith('4')\n        )\n      })\n    }\n\n    if (activity) {\n      rows = rows.filter(item => {\n        return item.activity === activity\n      })\n    }\n\n    rows = rows.map(item => {\n      const newRow = { ...item }\n      delete newRow.activity\n      return newRow\n    })\n\n    return {\n      showEntries: 1,\n      columns: [{\n        label: 'Empresa',\n        field: 'company',\n        sort: 'asc'\n      }, {\n        label: 'Símbolo',\n        field: 'code',\n        sort: 'asc'\n      }, {\n        label: 'Preço atual',\n        field: 'price',\n        sort: 'asc'\n      }, {\n        label: 'Variação dia',\n        field: 'day_variation',\n        sort: 'asc'\n      }, {\n        label: 'Variação fech. ant.',\n        field: 'variation',\n        sort: 'asc'\n      }, {\n        label: 'P/L',\n        field: 'p_l',\n        sort: 'asc'\n      }, {\n        label: 'P/VP',\n        field: 'p_vp',\n        sort: 'asc'\n      }, {\n        label: 'Atualização',\n        field: 'updated',\n        sort: 'asc'\n      }, {\n        label: 'Gráficos',\n        field: 'chart',\n        sort: 'asc'\n      }, {\n        label: 'Links',\n        field: 'links',\n        sort: 'asc'\n      }],\n      rows\n    }\n  }\n\n  _getPositiveNegativeClass = value => {\n    if (+value > 0) {\n      return 'positive'\n    } else if (+value < 0) {\n      return 'negative'\n    }\n  }\n\n  _toggleFilter = name => {\n    const { filters } = this.state\n    const newFilters = {\n      ...filters,\n      [name]: !filters[name]\n    }\n    this.setState({ filters: newFilters })\n  }\n\n  _onChangeCandles = value => {\n    const { filters } = this.state\n    const newFilters = {\n      ...filters,\n      candles: value\n    }\n    this.setState({ filters: newFilters }, this._loadData)\n  }\n\n  _loadData = () => {\n    const filters = {\n      candles: this.state.filters.candles.map(item => {\n        return item[0]\n      }).join(',')\n    }\n    this.props.loadCompanies(filters)\n  }\n\n  _onChangeActivity = event => {\n    const activity = event.target.value\n    const { filters } = this.state\n    const newFilters = { ...filters, activity }\n    this.setState({ filters: newFilters })\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    company: state.company\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadCompanies: filters => dispatch(loadCompanies(filters))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import {\n  Home\n} from '../components/pages'\n\nexport default {\n  routes: [{\n    name: 'home',\n    path: '/',\n    component: Home\n  }]\n}\n","import { api } from '../../utils'\n\nconst identifier = 'company'\n\nexport const loadCompanies = (filters = {}) => {\n  return dispatch => {\n    dispatch({ type: 'BEFORE_SEND', identifier })\n    api.get('/companies', filters).then(result => {\n      let data = []\n      if (result.success) {\n        data = result.data\n      }\n      dispatch({\n        type: 'SET_COMPANIES',\n        data\n      })\n      dispatch({ type: 'AFTER_RESPONSE', identifier })\n    })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter, BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { CookiesProvider } from 'react-cookie'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './styles/styles.css'\nimport store from './store'\nimport routes from './routes'\n\nrender(\n  <Provider store={store}>\n    <CookiesProvider>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            {routes.routes.map(route => (\n              <Route\n                exact={true}\n                key={route.name}\n                path={route.path}\n                component={route.component}\n                />\n            ))}\n          </Switch>\n        </BrowserRouter>\n      </HashRouter>\n    </CookiesProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}