{"version":3,"sources":["store/reducers/company.js","store/reducers/index.js","store/index.js","components/organisms/Companies.js","utils/api.js","utils/number.js","components/pages/Home.js","routes/index.js","store/actions/company.js","index.js"],"names":["initialState","list","sending","combineReducers","company","state","action","nextState","type","identifier","data","store","createStore","rootReducer","compose","applyMiddleware","thunk","Companies","this","props","searchLabel","entriesLabel","paginationLabel","infoLabel","responsive","striped","small","Component","api","getURL","buildURL","path","post","token","request","put","get","params","delete","buildHeaders","headers","Object","assign","method","instance","axios","create","baseURL","config","url","then","response","catch","error","formatPercentage","value","signal","variation","toFixed","Home","filters","evenEmpty","_getData","rows","forEach","item","aggregate","b3link","target","rel","href","id","fundamentuslink","code","tradingview","price","updated","dayVariation","pL","quote","current","open","number","Date","toLocaleString","fundamentus","indicators","p_l","activity","className","push","name","day_variation","filter","showEntries","columns","label","field","sort","_getPositiveNegativeClass","loadCompanies","Container","fluid","FormCheck","Input","checked","onChange","event","newFilters","setState","routes","component","connect","dispatch","result","success","render","basename","process","map","route","exact","key","document","getElementById"],"mappings":"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","file":"static/js/main.b3dbee48.chunk.js","sourcesContent":["const initialState = {\n  list: [],\n  sending: false\n}\n\nconst identifier = 'company'\n\nexport default (state = initialState, action) => {\n  let nextState = { ...state }\n\n  switch (action.type) {\n    case 'BEFORE_SEND':\n      if (action.identifier === identifier) {\n        nextState.sending = true\n      }\n      break\n\n    case 'AFTER_RESPONSE':\n      if (action.identifier === identifier) {\n        nextState.sending = false\n      }\n      break\n\n    case 'SET_COMPANIES':\n      nextState.list = action.data\n      break\n\n    default:\n      nextState = state\n      break\n  }\n\n  return nextState\n}\n","import { combineReducers } from 'redux'\nimport company from './company'\n\nexport default combineReducers({\n  company\n})\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk))\n)\n\nexport default store\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { MDBDataTable } from 'mdbreact'\n\nclass Companies extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired\n  };\n\n  render () {\n    const { data } = this.props\n    return (\n      <MDBDataTable\n        searchLabel='Buscar'\n        entriesLabel='Limitar'\n        paginationLabel={['Anterior', 'Próxima']}\n        infoLabel={['Exibindo', 'até', 'de', 'registros']}\n        responsive\n        striped\n        small\n        data={data}\n      />\n    )\n  };\n}\n\nexport default Companies\n","import axios from 'axios'\n\n/**\n * Utilidades para API\n */\nconst api = {\n  /**\n   * Retorna url da api\n   * @returns {string}\n   */\n  getURL () {\n    let url\n    if (\n      process.env.NODE_ENV === 'dev' ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NODE_ENV === 'test'\n    ) {\n      url = 'http://localhost:4000/'\n    } else {\n      url = 'https://api.b3-companies.thiagosf.net/'\n    }\n    return url\n  },\n\n  /**\n   * Monta url\n   * @param {string} path\n   * @returns {string}\n   */\n  buildURL (path) {\n    return this.getURL() + path\n  },\n\n  /**\n   * Post\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  post (path, data = {}, token = null) {\n    return this.request('post', path, data, token)\n  },\n\n  /**\n   * Put\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  put (path, data = {}, token = null) {\n    return this.request('put', path, data, token)\n  },\n\n  /**\n   * Get\n   * @param {string} path\n   * @param {object} [params={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  get (path, params = {}, token = null) {\n    return this.request('get', path, params, token)\n  },\n\n  /**\n   * Post\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  delete (path, data = {}, token = null) {\n    return this.request('delete', path, data, token)\n  },\n\n  /**\n   * Retorna headers\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {object}\n   */\n  buildHeaders (data = {}, token = null) {\n    let headers = {}\n    if (data.headers) {\n      headers = Object.assign({}, data.headers)\n    }\n    if (token) {\n      headers['Authorization'] = `Token ${token}`\n    }\n    return headers\n  },\n\n  /**\n   * Faz request\n   * @param {string} method\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {object} [token=null]\n   * @returns {Promise}\n   */\n  request (method, path, data = {}, token = null) {\n    const headers = this.buildHeaders(data, token)\n    const instance = axios.create({\n      baseURL: this.getURL(),\n      headers\n    })\n    let config = {\n      url: path,\n      method,\n    }\n    if (method === 'get') {\n      config.params = data || {}\n    } else {\n      config.data = data || {}\n    }\n    return instance.request(config)\n      .then(response => response.data)\n      .catch(error => {\n        if (error.response && error.response.data) {\n          return error.response.data\n        }\n        throw error\n      })\n  }\n}\n\nexport default api\n","export default {\n  formatPercentage (value, signal = true) {\n    let variation = +((+value).toFixed(2))\n    if (signal) {\n      variation = `${variation}%`\n    }\n    return variation\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Container,\n  FormCheck\n} from 'react-bootstrap'\nimport { Companies } from '../organisms'\nimport { loadCompanies } from '../../store/actions/company'\nimport { number } from '../../utils'\n\nclass Home extends Component {\n  state = {\n    filters: {\n      evenEmpty: false\n    }\n  };\n\n  componentDidMount () {\n    this.props.loadCompanies()\n  };\n\n  render () {\n    const { filters } = this.state\n    const { sending } = this.props.company\n    const data = this._getData()\n    return (\n      <Container fluid>\n        <div className=\"home\">\n          <h1 className=\"home__title\">Empresas B3</h1>\n          <div className=\"home-filters\">\n            <label className=\"form-check\">\n              <FormCheck.Input\n                checked={filters.evenEmpty}\n                onChange={event => {\n                  const newFilters = {\n                    ...filters,\n                    evenEmpty: !filters.evenEmpty\n                  }\n                  this.setState({ filters: newFilters })\n                }}\n              />\n              <span>Exibir ações com preço em branco</span>\n            </label>\n          </div>\n          {sending &&\n            <p>Carregando...</p>\n          }\n          {!sending &&\n            <Companies\n              data={data}\n            />\n          }\n        </div>\n      </Container>\n    )\n  };\n\n  _getData = () => {\n    const { evenEmpty } = this.state.filters\n    const { list } = this.props.company\n    let rows = []\n    list.forEach(item => {\n      if (item.aggregate) {\n        item.aggregate.forEach(aggregate => {\n          const b3link = (\n            <a\n              target='_blank'\n              rel='noopener noreferrer'\n              href={`http://bvmf.bmfbovespa.com.br/cias-listadas/empresas-listadas/ResumoEmpresaPrincipal.aspx?codigoCvm=${item.id}&idioma=pt-br`}\n            >\n              view\n            </a>\n          )\n          const fundamentuslink = (\n            <a\n              target='_blank'\n              rel='noopener noreferrer'\n              href={`https://www.fundamentus.com.br/detalhes.php?papel=${aggregate.code}`}\n            >\n              view\n            </a>\n          )\n          const tradingview = (\n            <a\n              target='_blank'\n              rel='noopener noreferrer'\n              href={`https://br.tradingview.com/chart/?symbol=BMFBOVESPA:${aggregate.code}`}\n            >\n              view\n            </a>\n          )\n          let price = 0\n          let updated = null\n          let dayVariation = 0\n          let variation = 0\n          let pL = 0\n          if (aggregate.quote) {\n            if (aggregate.quote.current) {\n              price = +aggregate.quote.current\n              dayVariation = ((+aggregate.quote.current / +aggregate.quote.open) - 1) * 100\n              dayVariation = number.formatPercentage(dayVariation, false)\n              // dayVariation = (\n              //   <span className={this._getPositiveNegativeClass(dayVariation)}>{dayVariation}</span>\n              // )\n              updated = new Date(+aggregate.quote.updated)\n              updated = updated.toLocaleString()\n            }\n            variation = number.formatPercentage(aggregate.quote.variation, false)\n            // variation = (\n            //   <span className={this._getPositiveNegativeClass(variation)}>{variation}</span>\n            // )\n          }\n          if (\n            aggregate.fundamentus &&\n            aggregate.fundamentus.indicators\n          ) {\n            pL = +aggregate.fundamentus.indicators.p_l\n          }\n          const activity = (\n            <div className=\"company-activity\">\n              {item.activity}\n            </div>\n          )\n          rows.push({\n            company: item.name,\n            activity,\n            code: aggregate.code,\n            price,\n            day_variation: dayVariation,\n            variation,\n            p_l: pL,\n            updated,\n            b3link,\n            fundamentuslink,\n            tradingview\n          })\n        })\n      }\n    })\n\n    if (!evenEmpty) {\n      rows = rows.filter(item => {\n        return item.price > 0\n      })\n    }\n\n    return {\n      showEntries: 1,\n      columns: [{\n        label: 'Empresa',\n        field: 'company',\n        sort: 'asc'\n      }, {\n        label: 'Atividade',\n        field: 'activity',\n        sort: 'asc'\n      }, {\n        label: 'Símbolo',\n        field: 'code',\n        sort: 'asc'\n      }, {\n        label: 'Preço atual',\n        field: 'price',\n        sort: 'asc'\n      }, {\n        label: 'Variação dia',\n        field: 'day_variation',\n        sort: 'asc'\n      }, {\n        label: 'Variação fech. ant.',\n        field: 'variation',\n        sort: 'asc'\n      }, {\n        label: 'P/L',\n        field: 'p_l',\n        sort: 'asc'\n      }, {\n        label: 'Atualização',\n        field: 'updated',\n        sort: 'asc'\n      }, {\n        label: 'B3',\n        field: 'b3link',\n        sort: 'asc'\n      }, {\n        label: 'Fundamentus',\n        field: 'fundamentuslink',\n        sort: 'asc'\n      }, {\n        label: 'TradingView',\n        field: 'tradingview',\n        sort: 'asc'\n      }],\n      rows\n    }\n  };\n\n  _getPositiveNegativeClass = value => {\n    if (+value > 0) {\n      return 'positive'\n    } else if (+value < 0) {\n      return 'negative'\n    }\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    company: state.company\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadCompanies: () => dispatch(loadCompanies())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import {\n  Home\n} from '../components/pages'\n\nexport default {\n  routes: [{\n    name: 'home',\n    path: '/',\n    component: Home\n  }]\n}\n","import { api } from '../../utils'\n\nconst identifier = 'company'\n\nexport const loadCompanies = () => {\n  return dispatch => {\n    dispatch({ type: 'BEFORE_SEND', identifier })\n    api.get('companies').then(result => {\n      let data = []\n      if (result.success) {\n        data = result.data\n      }\n      dispatch({\n        type: 'SET_COMPANIES',\n        data\n      })\n      dispatch({ type: 'AFTER_RESPONSE', identifier })\n    })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter, BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { CookiesProvider } from 'react-cookie'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './styles/styles.css'\nimport store from './store'\nimport routes from './routes'\n\nrender(\n  <Provider store={store}>\n    <CookiesProvider>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            {routes.routes.map(route => (\n              <Route\n                exact={true}\n                key={route.name}\n                path={route.path}\n                component={route.component}\n                />\n            ))}\n          </Switch>\n        </BrowserRouter>\n      </HashRouter>\n    </CookiesProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}