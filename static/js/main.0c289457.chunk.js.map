{"version":3,"sources":["store/reducers/company.js","store/reducers/index.js","store/index.js","components/organisms/Companies.js","utils/api.js","utils/number.js","components/pages/Home.js","routes/index.js","store/actions/company.js","index.js"],"names":["initialState","list","sending","combineReducers","company","state","action","nextState","type","identifier","data","store","createStore","rootReducer","compose","applyMiddleware","thunk","Companies","this","props","searchLabel","entriesLabel","paginationLabel","infoLabel","responsive","striped","small","Component","api","getURL","buildURL","path","post","token","request","put","get","params","delete","buildHeaders","headers","Object","assign","method","instance","axios","create","baseURL","config","url","then","response","catch","error","formatPercentage","value","signal","variation","toFixed","Home","filters","evenEmpty","justThreeFour","_getData","rows","forEach","item","b3link","target","rel","href","code","fundamentuslink","tradingview","updated","dayVariation","pL","p_l","pVp","p_vp","price","open","number","last_candle","close","Date","updated_at","toLocaleString","links","className","chart","screenshot","fullScreenshot","screenshotDate","date","src","alt","title","push","name","day_variation","filter","endsWith","showEntries","columns","label","field","sort","_getPositiveNegativeClass","_toggleFilter","newFilters","setState","loadCompanies","Container","fluid","FormCheck","Input","checked","onChange","routes","component","connect","dispatch","result","success","render","basename","process","map","route","exact","key","document","getElementById"],"mappings":"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","file":"static/js/main.0c289457.chunk.js","sourcesContent":["const initialState = {\n  list: [],\n  sending: false\n}\n\nconst identifier = 'company'\n\nexport default (state = initialState, action) => {\n  let nextState = { ...state }\n\n  switch (action.type) {\n    case 'BEFORE_SEND':\n      if (action.identifier === identifier) {\n        nextState.sending = true\n      }\n      break\n\n    case 'AFTER_RESPONSE':\n      if (action.identifier === identifier) {\n        nextState.sending = false\n      }\n      break\n\n    case 'SET_COMPANIES':\n      nextState.list = action.data\n      break\n\n    default:\n      nextState = state\n      break\n  }\n\n  return nextState\n}\n","import { combineReducers } from 'redux'\nimport company from './company'\n\nexport default combineReducers({\n  company\n})\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk))\n)\n\nexport default store\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { MDBDataTable } from 'mdbreact'\n\nclass Companies extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired\n  };\n\n  render () {\n    const { data } = this.props\n    return (\n      <MDBDataTable\n        searchLabel='Buscar'\n        entriesLabel='Limitar'\n        paginationLabel={['Anterior', 'Próxima']}\n        infoLabel={['Exibindo', 'até', 'de', 'registros']}\n        responsive\n        striped\n        small\n        data={data}\n      />\n    )\n  };\n}\n\nexport default Companies\n","import axios from 'axios'\n\n/**\n * Utilidades para API\n */\nconst api = {\n  /**\n   * Retorna url da api\n   * @returns {string}\n   */\n  getURL () {\n    let url\n    if (\n      process.env.NODE_ENV === 'dev' ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NODE_ENV === 'test'\n    ) {\n      url = 'http://localhost:3000'\n    } else {\n      url = 'https://api.b3-companies.thiagosf.net'\n    }\n    return url\n  },\n\n  /**\n   * Monta url\n   * @param {string} path\n   * @returns {string}\n   */\n  buildURL (path) {\n    return this.getURL() + path\n  },\n\n  /**\n   * Post\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  post (path, data = {}, token = null) {\n    return this.request('post', path, data, token)\n  },\n\n  /**\n   * Put\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  put (path, data = {}, token = null) {\n    return this.request('put', path, data, token)\n  },\n\n  /**\n   * Get\n   * @param {string} path\n   * @param {object} [params={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  get (path, params = {}, token = null) {\n    return this.request('get', path, params, token)\n  },\n\n  /**\n   * Post\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {Promise}\n   */\n  delete (path, data = {}, token = null) {\n    return this.request('delete', path, data, token)\n  },\n\n  /**\n   * Retorna headers\n   * @param {object} [data={}]\n   * @param {string} [token=null]\n   * @returns {object}\n   */\n  buildHeaders (data = {}, token = null) {\n    let headers = {}\n    if (data.headers) {\n      headers = Object.assign({}, data.headers)\n    }\n    if (token) {\n      headers['Authorization'] = `Token ${token}`\n    }\n    return headers\n  },\n\n  /**\n   * Faz request\n   * @param {string} method\n   * @param {string} path\n   * @param {object} [data={}]\n   * @param {object} [token=null]\n   * @returns {Promise}\n   */\n  request (method, path, data = {}, token = null) {\n    const headers = this.buildHeaders(data, token)\n    const instance = axios.create({\n      baseURL: this.getURL(),\n      headers\n    })\n    let config = {\n      url: path,\n      method,\n    }\n    if (method === 'get') {\n      config.params = data || {}\n    } else {\n      config.data = data || {}\n    }\n    return instance.request(config)\n      .then(response => response.data)\n      .catch(error => {\n        if (error.response && error.response.data) {\n          return error.response.data\n        }\n        throw error\n      })\n  }\n}\n\nexport default api\n","export default {\n  formatPercentage (value, signal = true) {\n    let variation = +((+value).toFixed(2))\n    if (signal) {\n      variation = `${variation}%`\n    }\n    return variation\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Container,\n  FormCheck\n} from 'react-bootstrap'\nimport { Companies } from '../organisms'\nimport { loadCompanies } from '../../store/actions/company'\nimport { number, api } from '../../utils'\n\nclass Home extends Component {\n  state = {\n    filters: {\n      evenEmpty: false,\n      justThreeFour: true\n    }\n  }\n\n  componentDidMount () {\n    this.props.loadCompanies()\n  }\n\n  render () {\n    const { filters } = this.state\n    const { sending } = this.props.company\n    const data = this._getData()\n    return (\n      <Container fluid>\n        <div className=\"home\">\n          <h1 className=\"home__title\">Empresas B3</h1>\n          <div className=\"home-filters\">\n            <div className=\"row\">\n              <div className=\"col-6\">\n                <label className=\"form-check\">\n                  <FormCheck.Input\n                    checked={filters.evenEmpty}\n                    onChange={() => this._toggleFilter('evenEmpty')}\n                  />\n                  <span>Exibir ações com preço em branco</span>\n                </label>\n              </div>\n              <div className=\"col-6\">\n                <label className=\"form-check\">\n                  <FormCheck.Input\n                    checked={filters.justThreeFour}\n                    onChange={() => this._toggleFilter('justThreeFour')}\n                  />\n                  <span>Apenas com final 3 e 4</span>\n                </label>\n              </div>\n            </div>\n          </div>\n          {sending &&\n            <p>Carregando...</p>\n          }\n          {!sending &&\n            <Companies\n              data={data}\n            />\n          }\n        </div>\n      </Container>\n    )\n  }\n\n  _getData = () => {\n    const { evenEmpty, justThreeFour } = this.state.filters\n    const { list } = this.props.company\n    let rows = []\n    list.forEach(item => {\n      const b3link = (\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href={`http://bvmf.bmfbovespa.com.br/cias-listadas/empresas-listadas/BuscaEmpresaListada.aspx?Nome=${item.code}&idioma=pt-br`}\n        >\n          b3\n        </a>\n      )\n      const fundamentuslink = (\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href={`https://www.fundamentus.com.br/detalhes.php?papel=${item.code}`}\n        >\n          fundamentus\n        </a>\n      )\n      const tradingview = (\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href={`https://br.tradingview.com/chart/?symbol=BMFBOVESPA:${item.code}`}\n        >\n          tradingView\n        </a>\n      )\n      let updated = null\n      let dayVariation = 0\n      let variation = 0\n      let pL = +item.p_l\n      let pVp = +item.p_vp\n      let price = +item.price\n      let open = +item.open\n      if (item.price) {\n        dayVariation = ((price / open) - 1) * 100\n        dayVariation = number.formatPercentage(dayVariation, false)\n        if (item.last_candle) {\n          variation = ((price / +item.last_candle.close) - 1) * 100\n          variation = number.formatPercentage(variation, false)\n          updated = new Date(item.updated_at)\n          updated = updated.toLocaleString()\n        }\n      }\n      const links = (\n        <div className=\"company-links\">\n          {b3link}\n          <br />\n          {fundamentuslink}\n          <br />\n          {tradingview}\n        </div>\n      )\n      let chart = null\n      if (item.screenshot && item.screenshot.url) {\n        const fullScreenshot = `${api.getURL()}${item.screenshot.url}`\n        let screenshotDate = new Date(+item.screenshot.date)\n        screenshotDate = screenshotDate.toLocaleString()\n        chart = (\n          <div className=\"company-chart\">\n            <img\n              src={fullScreenshot}\n              alt={`Data do screenshot: ${screenshotDate}`}\n              title={`Data do screenshot: ${screenshotDate}`}\n            />\n          </div>\n        )\n      }\n      rows.push({\n        company: item.name,\n        code: item.code,\n        price,\n        day_variation: dayVariation,\n        variation,\n        p_l: pL,\n        p_vp: pVp,\n        updated,\n        chart,\n        links\n      })\n    })\n\n    if (!evenEmpty) {\n      rows = rows.filter(item => {\n        return item.price > 0\n      })\n    }\n\n    if (justThreeFour) {\n      rows = rows.filter(item => {\n        return (\n          item.code.endsWith('3') ||\n          item.code.endsWith('4')\n        )\n      })\n    }\n\n    return {\n      showEntries: 1,\n      columns: [{\n        label: 'Empresa',\n        field: 'company',\n        sort: 'asc'\n      }, {\n        label: 'Símbolo',\n        field: 'code',\n        sort: 'asc'\n      }, {\n        label: 'Preço atual',\n        field: 'price',\n        sort: 'asc'\n      }, {\n        label: 'Variação dia',\n        field: 'day_variation',\n        sort: 'asc'\n      }, {\n        label: 'Variação fech. ant.',\n        field: 'variation',\n        sort: 'asc'\n      }, {\n        label: 'P/L',\n        field: 'p_l',\n        sort: 'asc'\n      }, {\n        label: 'P/VP',\n        field: 'p_vp',\n        sort: 'asc'\n      }, {\n        label: 'Atualização',\n        field: 'updated',\n        sort: 'asc'\n      }, {\n        label: 'Gráfico dia anterior',\n        field: 'chart',\n        sort: 'asc'\n      }, {\n        label: 'Links',\n        field: 'links',\n        sort: 'asc'\n      }],\n      rows\n    }\n  }\n\n  _getPositiveNegativeClass = value => {\n    if (+value > 0) {\n      return 'positive'\n    } else if (+value < 0) {\n      return 'negative'\n    }\n  }\n\n  _toggleFilter = name => {\n    const { filters } = this.state\n    const newFilters = {\n      ...filters,\n      [name]: !filters[name]\n    }\n    this.setState({ filters: newFilters })\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    company: state.company\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadCompanies: () => dispatch(loadCompanies())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import {\n  Home\n} from '../components/pages'\n\nexport default {\n  routes: [{\n    name: 'home',\n    path: '/',\n    component: Home\n  }]\n}\n","import { api } from '../../utils'\n\nconst identifier = 'company'\n\nexport const loadCompanies = () => {\n  return dispatch => {\n    dispatch({ type: 'BEFORE_SEND', identifier })\n    api.get('/companies').then(result => {\n      let data = []\n      if (result.success) {\n        data = result.data\n      }\n      dispatch({\n        type: 'SET_COMPANIES',\n        data\n      })\n      dispatch({ type: 'AFTER_RESPONSE', identifier })\n    })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter, BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { CookiesProvider } from 'react-cookie'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './styles/styles.css'\nimport store from './store'\nimport routes from './routes'\n\nrender(\n  <Provider store={store}>\n    <CookiesProvider>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            {routes.routes.map(route => (\n              <Route\n                exact={true}\n                key={route.name}\n                path={route.path}\n                component={route.component}\n                />\n            ))}\n          </Switch>\n        </BrowserRouter>\n      </HashRouter>\n    </CookiesProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}